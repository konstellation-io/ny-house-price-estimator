kind: secret
name: minio-key-id
get:
  path: new-york-price-estim-mlflow-secret
  name: AWS_ACCESS_KEY_ID

---
kind: secret
name: minio-secret
get:
  path: new-york-price-estim-mlflow-secret
  name: AWS_SECRET_ACCESS_KEY

---
kind: secret
name: kre-api-token
get:
  path: kre-secrets
  name: KRE_API_TOKEN

---
kind: secret
name: kre-api-url
get:
  path: kre-secrets
  name: KRE_API_URL

---
kind: pipeline
type: kubernetes
name: preprocess-data

trigger:
  ref:
    - refs/tags/preprocess-data-*

environment:
  PYTHONPATH: /drone/src/lab
  PATH_CONFIG: /drone/src/lab/processes/config.ini
  MINIO_DATA_FOLDER: /shared-storage/new-york-price-estim/data

steps:
  - name: preprocess-airbnb-data
    image: konstellation/kdl-py:3.9-1.3.1
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: minio-key-id
      AWS_SECRET_ACCESS_KEY:
        from_secret: minio-secret
    commands:
      - pipenv install --system --deploy --dev
      - pytest lab
      - python3 "lab/processes/preprocess_data/main.py"
    volumes:
      - name: shared-storage
        path: /shared-storage

volumes:
  - name: shared-storage
    claim:
      name: kdl-received-data-claim

---
kind: pipeline
type: kubernetes
name: model-training

trigger:
  ref:
    - refs/tags/train-model-*

environment:
  PYTHONPATH: /drone/src/lab
  PATH_CONFIG: /drone/src/lab/processes/config.ini
  MINIO_DATA_FOLDER: /shared-storage/new-york-price-estim/data
  MLFLOW_URL: http://new-york-price-estim-mlflow:5000
  MLFLOW_S3_ENDPOINT_URL: http://kdl-server-minio:9000
  USER: ${DRONE_COMMIT_AUTHOR}

steps:
  - name: train-simple-classifier
    image: konstellation/kdl-py:3.9-1.3.1
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: minio-key-id
      AWS_SECRET_ACCESS_KEY:
        from_secret: minio-secret
    commands:
      - pipenv install --system --deploy
      - python3 "lab/processes/train_model/main.py"
    volumes:
      - name: shared-storage
        path: /shared-storage

volumes:
  - name: shared-storage
    claim:
      name: kdl-received-data-claim

---
kind: pipeline
type: kubernetes
name: build-runtime

trigger:
  ref:
    - refs/tags/krt-*

environment:
  PYTHONPATH: /drone/src/lab
  PATH_CONFIG: /drone/src/lab/processes/config.ini
  MINIO_KRT_FOLDER: /shared-storage/new-york-price-estim/krt
  MLFLOW_URL: http://new-york-price-estim-mlflow:5000
  MLFLOW_S3_ENDPOINT_URL: http://kdl-server-minio:9000
  KLI_VERSION: 1.0-alpha.4
  KLI_REPO: "git@github.com:konstellation-io/kli.git"
  KRE_ENV: demo

steps:
  # - name: test-etl
  #   image: konstellation/kdl-py:3.9-1.3.1
  #   commands:
  #     - pipenv install --dev --system
  #     - pytest runtime/src/etl

  - name: build-krt
    image: konstellation/kdl-py:3.9-1.3.1
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: minio-key-id
      AWS_SECRET_ACCESS_KEY:
        from_secret: minio-secret
    commands:
      - pipenv install --system --deploy
      - python3 "lab/processes/download_model/main.py"
      - TAG=$(echo $DRONE_TAG | sed 's/krt\-//g')
      - CUSTOM_TAG=$(echo $TAG | sed 's/\.//g')
      - MINIO_TAG=$(echo $TAG | sed 's/\./-/g')
      - kli krt validate ./runtime/krt.yaml
      - mkdir -p $MINIO_KRT_FOLDER
      - kli krt create ./runtime $MINIO_KRT_FOLDER/price-estimator-$TAG.krt -v price-estimator-$CUSTOM_TAG
    volumes:
      - name: shared-storage
        path: /shared-storage

  # - name: deploy-krt
  #   image: docker:19
  #   environment:
  #     AWS_ACCESS_KEY_ID:
  #       from_secret: minio-key-id
  #     AWS_SECRET_ACCESS_KEY:
  #       from_secret: minio-secret
  #     KRE_API_TOKEN:
  #       from_secret: kre-api-token
  #     KRE_API_URL:
  #       from_secret: kre-api-url
  #   commands:
  #     - tar -zxvf kli_1.0-alpha.4_linux_amd64.tar.gz
  #     - mv kli_1.0-alpha.4_linux_amd64/bin/kli /usr/local/bin/
  #     - TAG=$(echo $DRONE_TAG | sed 's/krt\-//g')
  #     - CUSTOM_TAG=$(echo $TAG | sed 's/\.//g')
  #     - MINIO_TAG=$(echo $TAG | sed 's/\./-/g')
  #     - kli server add $KRE_ENV $KRE_API_URL $KRE_API_TOKEN
  #     - kli server ls
  #     - kli server default $KRE_ENV
  #     - echo "--- Start building new KRT..."
  #     - kli kre version create $MINIO_KRT_FOLDER/price-estimator-$TAG.krt
  #     - echo "--- Waiting for version on created status"
  #     - sleep 15
  #     - kli kre version config --set OUTPUT_PRICE_CURRENCY=USD price-estimator-$CUSTOM_TAG
  #     - kli kre version start price-estimator-$CUSTOM_TAG -m "start version from KDL"
  #   volumes:
  #     - name: shared-storage
  #       path: /shared-storage

  # - name: publish-krt
  #   image: docker:19
  #   environment:
  #     AWS_ACCESS_KEY_ID:
  #       from_secret: minio-key-id
  #     AWS_SECRET_ACCESS_KEY:
  #       from_secret: minio-secret
  #     KRE_API_TOKEN:
  #       from_secret: kre-api-token
  #     KRE_API_URL:
  #       from_secret: kre-api-url
  #   commands:
  #     - tar -zxvf kli_1.0-alpha.4_linux_amd64.tar.gz
  #     - mv kli_1.0-alpha.4_linux_amd64/bin/kli /usr/local/bin/
  #     - TAG=$(echo $DRONE_TAG | sed 's/krt\-//g')
  #     - CUSTOM_TAG=$(echo $TAG | sed 's/\.//g')
  #     - MINIO_TAG=$(echo $TAG | sed 's/\./-/g')
  #     - kli server add $KRE_ENV $KRE_API_URL $KRE_API_TOKEN
  #     - kli server default $KRE_ENV
  #     - kli kre version publish price-estimator-${CUSTOM_TAG} -m "publish version from KDL"
  #   volumes:
  #     - name: shared-storage
  #       path: /shared-storage
  #   when:
  #     event:
  #       - promote

volumes:
  - name: shared-storage
    claim:
      name: kdl-received-data-claim
